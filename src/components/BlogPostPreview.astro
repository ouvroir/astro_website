---
import {
    mapGenericToText,
    getLanguageFromURL,
    formatDate
} from '/src/data/languages.ts';

export interface Props{
    post: any;
}


let currentPath = Astro.canonicalURL;
const lang = currentPath && getLanguageFromURL(currentPath);

//make tag component to deal with all cases in one spot? 
//remove tag from path for links to blogposts
const tagIndex = currentPath.indexOf('tags')
if (tagIndex != -1)
    currentPath = currentPath.slice(0, tagIndex)
//other option: let path = currentPath.includes("/tags/") ? currentPath.replace("/tags","").concat(post.slug) : currentPath.concat(post.slug)

const { post } = Astro.props;
let tags = post.frontmatter.tags;

var date = formatDate(post.frontmatter.date, lang)
---
<article class="column col-12 section">
    <header class="columns col-12">
        <div class="column col-8 col-xs-12">
            <h3><a href={currentPath+post.frontmatter.slug+"/"}>
                {post.frontmatter.title}</a>
            </h3>
        </div>
        <div class="columns col-4 col-xs-12">
            <p>{date}</p>
        </div>
    </header>
    <p>{post.description}</p>
    <div class="columns col-12">
        <div class="column col-8 col-xs-12">
            <a href={currentPath+post.slug+"/"}>{mapGenericToText["LIRE_SUITE"][lang]}</a>
        </div>
        <div class="column col-4 col-xs-12">{tags.map(t => <span class="chip">{t}</span>)}</div>
    </div>
</article>

<style>
article {
    padding-top: 0.5rem
}

article > p {
    margin-bottom: 0.3rem;
    margin-bottom: none;
}
article > header > div > p {
    padding-top: 0.3rem;
    margin-bottom: none;
}

article {
    border-bottom: solid 1px grey;
    border-top: solid 1px grey;
}

</style>