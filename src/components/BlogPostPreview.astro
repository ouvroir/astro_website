---
import {
    mapGenericToText,
    getLanguageFromURL,
    formatDate
} from '/src/data/languages.ts';

export interface Props{
    post: any;
}

var currentPath = Astro.request.canonicalURL.pathname;
const lang = currentPath && getLanguageFromURL(currentPath);

//make tag component to deal with all cases in one spot? 
//remove tag from path for links to blogposts
const tagIndex = currentPath.indexOf('tags')
if (tagIndex != -1)
    currentPath = currentPath.slice(0, tagIndex)
//other option: let path = currentPath.includes("/tags/") ? currentPath.replace("/tags","").concat(post.slug) : currentPath.concat(post.slug)

const { post } = Astro.props;
let tags = post.tags;

var date = formatDate(post.date, lang)
---
<article class="section">
    <header>
        <a href={currentPath+post.slug+"/"}><h3 class="title">{post.title}</h3></a>
    </header>
    <p>{post.description}<br>{date}</p>
    <div>{tags.map(t => <span class="chip">{t}</span>)}</div>
    <a href={currentPath+post.slug+"/"}>{mapGenericToText["LIRE_SUITE"][lang]}</a>
</article>

<style>

</style>